Uninamo2 Suunnitelmaa

Työtehtäviä
	* Alpha	----------------------------------------------------------------------
		- Utopia Game Enginen debuggaus										...
			* Originia ei aina ehditä laskea ennen ensimmäistä piirtoa 		Väistetty?
			-> piirtyy aluksi väärään paikkaan
			* Kun siirrytään koodauksesta designiin, voi muutosprosessi 	Väistetty?
			mennä pieleen (puoliksi muuttuu)
			* Törmäyssysteemi ei ota huomioon stepin pituutta				DONE
				- Pitää korjata mahdollisimman pian							DONE
			* Jos törmää hirveän lujaa niin menee toisen objektin sisälle	DONE
			* EpicBOx tippuu lattian läpi!									Väistetty?
				- Tarvittavat numerot muuttuu mystisesti...
			* ComponentBoxin luominen hidastaa ohjelman käynnistymistä 		Väistetty?
			omituisen paljon
				- Kokeile piirtosyvyysjärjestämisalgoritmin muokkausta		DONE
					* Lokeroitu järjestelmä									DONE
					* "Swapper" -algoritmi									Hylätty
			* Vaihda MouseListenerHandlerin mousePositionjutut Point2D:stä 	DONE
			Point2D.Doubleen
			* Boxit vaan liukuu jos ne on päällekkäin 
			(laita liikuttaminen toisiin objekteihin)
				- Vaihtoehtoisesti valmista toimiva kitkasysteemi 
				sekä liikemäärän hallinta
			* Ohjelma bugaa täydellisesti jos laittaa toisen beltin			DONE
			* Boxit saattaa vieläkin työntyä liukuhihnan sisälle 
			törmäystilanteissa
				- Jos törmää toiseen boxiin (sivussa) samalla kun hihna 
				työntää
			* Jos rämppää testiä koodimoodissa niin designmoodi piirtyy 
			vaikka ei pitäisi
			* Boxit "hypähtelee" tai "rävähtää" silloin tällöin sivulle 
			muutaman framen ajaksi
		- Alkuvalmistelut													DONE
			* Repositoryn luominen											DONE
			* Ikkunan luominen												DONE
			* Handlersysteemien luominen									DONE
			* Navigaatiosysteemin rekonstruointi							DONE
				- Vanhan navigaatiosysteemin abstrahointi					DONE
				- Yleisen ratkaisun muodostus								DONE
					* Yleinen GamePhase -luokka								DONE
					* Yleinen resourceActivator -luokka						DONE
					* GamePhasejen luominen ja syöttäminen 					DONE
					resourceActovatoriin
			* Graafisten resurssien lataaminen								DONE
		- Komponenttien perustoiminnot										DONE
			* Komponenttiarkkitehtuuri										DONE
			* Yksinkertaisen testikomponentin (virtalähde) luominen			DONE
			* Signaalin lähettäminen ja vastaanottaminen					DONE
				- Signaalinkäsittelijäluokka								DONE
					* Signaalinlähettäjä									DONE
					* Signaalinvastaanottaja								DONE
			* Johtoluokan runko												DONE
			* Komponenttien sijoittaminen ja piirtäminen					DONE
		- Komponenttien kytkeminen toisiinsa								DONE
			* Toisen yksinkertaisen komponenttiluokan valmistaminen			DONE
			* Johtoluokan viimeistely										DONE
				- Johdon piirto												DONE
				- Johdon reagointi signaaleihin								DONE
			* Johtojen luomisen implementointi käyttöliittymässä			DONE
				- Komponenttien hiirikuuntelu								DONE
			* Johtojen poistamisen implementointi käyttöliittymässä			DONE
				- Johtojen hiirikuuntelu									DONE
		- Komponenttinäkymän ja testinäkymän välillä liikkuminen			DONE
			* Eri handlereiden aktivoiminen ja deaktivoiminen				DONE
			* Background toiseen näkymään niin erottaa						DONE
			* Siirtymänappula(t) koodauksen ja suunnitelman välille			DONE
		- Laitteiden perustoiminnot											DONE
			* Laitearkkitehtuuri											DONE
			* Yksinkertaisen testilaitteen (liukuhihna) luominen			DONE
		- Laitteiden kytkeminen komponentteihin								DONE
			* Testilaitteen komponenttien luominen							DONE
			* Liikkumattomuuden lisääminen komponentteihin					DONE
			* Tiedonvälitys komponenttien ja laitteen välillä				DONE
		- Toimijoiden perustoiminnot										DONE
			* Toimija-arkkitehtuuri											DONE
			* Yksinkertaisen testitoimijan (laatikko) luominen				DONE
			* Toimijan sekä laitteiden vuorovaikutus						DONE
		- Testausnappula													DONE
			* Testausnappuloiden lisääminen käyttöliittymään				DONE
			* Testausnappulan reagointi hiireen								DONE
		- Testausmoodi														DONE
			* Testausmoodin aloittaminen									DONE
				- Komponenttien ja muiden aktivoiminen						DONE
			* Testausmoodin lopettaminen									DONE
				- Komponenttien ja muiden resetoiminen						DONE
			* Grafiikoiden vaihtaminen										DONE
			* Komponenttien ja johtojen editoimisen estäminen testin aikana	DONE
		- Ajastin															DONE
			* Ajastimen arkkitehtuuri										DONE
			* Ajastindatan tiedonvälityksen viimeistely						DONE
			* Ajastinta käyttävän testiobjektin tekeminen					DONE
		- Komponenttien liikuttelu työpöydällä								DONE
			* Toiminnan implementoiminen komponenttiluokkaan				DONE
			* Johtojen reagoiminen liikutteluun								DONE
		- Komponenttilaatikot												DONE
			* Komponenttilaatikkoarkkitehtuuri								DONE
				- Ihmeellisten classien tapahtuvien konstruktorikutsujen 	Hylätty
				toteuttaminen
			* Laatikon luominen testikomponentille							DONE
			* Laatikon reagointi hiireen kuvan vaihdolla					DONE
		- Roskis / Komponenttien poistaminen								DONE
			* Roskisluokka ja sen luominen alussa							Hylätty
			* Komponenttien reagointi törmäykseen roskiksen kanssa 			Hylätty
			dropin lopussa
			* Komponenttien tuhoaminen kun ne menevät kentän reunalle		DONE
				- Visuaalinen havainnollistaminen
		- Paranteluja														DONE
			* CableConnectorien kuvan muuttuminen signaalin mukaan			DONE
		- Takaisinkytkentätilanteiden ratkaiseminen							Hylätty
			* Ongelmia signaalintunnistuksen kanssa jos komponentti ohjaa itseään
				- ORin signaalin saa "kiertämään" kytkemällä komponentin itseensä
	* Beta	----------------------------------------------------------------------
		- Voittolaitteet													DONE
			* Voittolaitearkkitehtuuri										DONE
				- Obstaclen tunnistaminen									DONE
				- Kerättyjen obstaclien poistaminen ja laskeminen			DONE
				- Voittohandlerin informoiminen								DONE
				- Jäljellä olevien keräysten piirtäminen					DONE
			* Yksinkertaisen testivoittolaitteen (laatikkovoito) 			DONE
			toteuttaminen
			* VictoryHandler, joka chekkaa, onko kaikki voittolaitteet 		DONE
			voittotilassa ja informoi lopullisen voiton
		- Ohjekirja															DONE
			* Ohjekirjan "näppäimen" toteuttaminen							DONE
			* Ohjekirjan arkkitehtuuri										DONE
				- Testikomponentin luominen ja poistaminen					DONE
				- Sivun vaihtaminen											DONE
					* Sivunäppäin											DONE
				- Sivun tekeminen luokkana?									DONE
					* Ehkä kirja voi olla (linkitetty) lista sivuja?		DONE
					* Eri resurssityypeille ehkä omat pienet luokat			DONE
					* Tekstin piirtäminen									DONE
						- Checkkaa messagebox jos sieltä sais 				DONE
						yleisen version väsättyä
				- Ohjehallinta												DONE
					* Sisältää												DONE
						- Sivut listana										DONE
						- Kirjanmerkit										DONE
						- näppäimet											DONE
						- taustan											DONE
				- Ohjekirjan sulkeminen										DONE
					* Sulkunäppäin											DONE
			* Ohjekirjamoodin päälle asettaminen							DONE
				- Muiden handlereiden epäaktivoiminen						DONE
				- Oma area													DONE
			* Alustavan sisällön tuottaminen								DONE
				- Tarvittavat enumeraatiot komponenteille, laitteille ja 	DONE
				obstacleille
					* getName												DONE
					* createObject											DONE
				- Testikomponentille tekstiä								DONE
				- Testiobjektille tekstiä									DONE
				- Testilaitteelle tekstiä									DONE
			* Ohjekirjan materiaalin lataaminen tiedostosta					DONE
			* Näpyteltävä testiversio										DONE
				- "Haihtuva" johtoluokka									DONE
				- Erillinen statsi inputnastaan, että klikkauksella 		Hylätty
				vaihtaa tyyppiä
		- Tehtävänannot														DONE
			* Tehtävänantoarkkitehruuri										DONE
				- Kuvausluokka												DONE
					* Lyhyt kuvaus -lappu									DONE
					* Pidempi kuvaus -kirje									DONE
					* Kuvauksen sulkeminen (klikkaamalla?)					DONE
					* Kuvausten lataaminen tiedostosta kentän alussa		DONE
			* Yksinkertaisen testitehtävänannon valmistaminen				DONE
			* Tarvittavan moodin piirtäminen ja muiden deaktivoiminen		DONE
			* Tehtävänannon lataaminen tiedostosta							DONE
				- Mukaan lukien kaikki kentän laitteet ja obstaclet sekä 	DONE
				collectorit
		- Sound effectien lisääminen peliin
			* Tarvittavat (testi) resurssit
			* Resurssien lataaminen ohjelman alussa
			* Äänten soittamisen implementointi
		- Musiikin lisääminen peliin
			* Resurssinhallinta
			* Tarvittavat resurssit
			* Musiikin soittaminen kentän alussa
		- Samanlaisten input- ja outputkomponenttien (ja laitteiden) 		DONE
		erotteleminen toisistaan numeroilla / nimillä 
			* (vois näkyä myös designvaiheessa koneissa)					DONE
			* MachineCounter -luokka joka laskee luotuja masiinoita			DONE
			* Järjestysnumeron tallentaminen alussa							DONE
				- Number = counter.getCurrentAmount(this.type)				DONE
				- Kannattaa tallentaa tekstinä (type + number)				DONE
		- Kenttien demot													...
			* Demonappula													DONE
			* Koodiratkaisujen (tallentaminen ja) lukeminen					DONE
				- Myös komponenttianalyysiä varten kustannusten lasku		...
			* Saa muuten varmaan bugattua koko roskan jos 					Jep jep
			ratkaisee kentän kytkemällä komponentin itseensä 
			(kenttää ei enää demossa pääse läpi)
		- Voittoikkuna
			* Voittoon siirtyminen
				- Ratkaisun lähetysnäppäin designmodeen (näkyvä)
					* Joudutaan kyllä ottamaan pois testin loppuessa
				- Huoneiden lopettaminen ja aloittaminen
					* Uusi gamephase: results
			* Komponenttikäytön analysointi
				- Käytettyjen komponenttityyppien ja määrien piirtäminen
					* ComponentCounter
					* GetSprite tyyppienumeraatioon
					* SimpleComponentSpriteDrawer class piirtämiseen
				- Käytetyn rahan laskeminen
					* GetPrice tyyppienumeraatioon
				- Grading
					* Käytetyn rahan vertaaminen tavoitteeseen
						- Tavoitte pitää tässä vaiheessa vielä vaan 
						heittää
					* Arvosanan piirtäminen
			* Uusien tehtävien antaminen
		- Kahden näkymän piirtäminen testausmoodissa (ja muuten)
			* Kameroiden implementointi
			* Kameran koon ja sijainnin muuttaminen testausvaiheessa
			* Näppäin käyttöliittymään, josta kuvan saa päälle tai pois
			* Piirtosyvyysongelman ratkaiseminen
		- Parantelua														...
			* Testausmoodin selkeä näyttäminen koodipuolella
			* Kerättävän stuffin näyttäminen voittokerääjässä				...
				- Oikea skaalaus
				- Designmodessa designsprite ja testauksessa real
			* Komponenttienumeraation toteuttaminen ja käyttäminen			DONE
				- Komponenttilaatikoiden luomisessa ilman erillisiä luokkia	DONE
				- Ohjeiden lukemisessa										DONE
			* Nuolen piirtäminen johdossa
			* "Back to Coding":in vaihtaminen "Start Coding":iksi kentän 
			alussa ja takaisin ekan klikkauksen jälkeen
			* Fysiikkamoottorin paranteleminen
				- Pyörimisen, kitkan sekä liikemäärän ottaminen mukaan
			* Muistinvapauttamisen varmentaminen heittämällä tarpeettomia 
			attribuutteja nulliksi
			* Refaktoroi mahdottomia parametrijoukkoja yhdistämällä niitä 
			mahdollisiksi kokonaisuuksiksi (vähän niinku areaChanger 
			yhistää areat ja areat kaikki perushandlerit)
	* Gold	---------------------------------------------------------------------
		- Main menu
			* Säätöihin, tehtävävalikkoon sekä kenttäeditoriin pääsy
			* Tarvittavat käyttöliittymäelementit
			* Tarvittavan "moden" aktivoiminen
		- Tee designmodesta resoluutiosta riippumaton (tullaan 
		tulevaisuudessa skaalaamaan eri tavalla kuin coding)
		- Säädöt
			* Säätövalikon "näppäimen" toteuttaminen
			* Säätövalikon arkkitehtuuri
			* Säätövalikon moodin päälle asettaminen
			* Säätövalikossa tarvittavat elementit
			* Resoluution säätäminen
			* Musiikin volyymin säätäminen
			* Äänen volyymin säätäminen
			* Efektien volyymin säätäminen
			* Fullscreenin säätö
			* Pelin nopeuden säätäminen
			* Asetusten tallentaminen
			* Asetusten lataaminen pelin alussa
		- Käyttäjän progression tallentaminen ja lukeminen
			* Tarvittavat staattiset luokat
			* Tietojen päivittäminen tiedostosta pelin alussa
		- Tehtävien valitseminen
			* Tehtävien valintaympäristön luominen
			* Tehtävän lopettaminen
			* Tehtävän aloittaminen
			* Unlockattujen tehtävien lisääminen käyttäjätietoihin
		- Research mode
			* Käynnissä olevien tutkimusten tallentaminen 
			käyttäjätietoihin
			* Tutkimusalueen käyttöliittymä
			* Tutkimuksen aloittaminen
			* Tutkimuksen lopettaminen
				- Tuloksista ilmoittaminen
			* Komponenttien unlockkaaminen
			* Kenttien unlockkaaminen
			* Alennusten toiminta sekä unlockkaaminen
		- Gold Graffat
			* Komponentit
			* Laitteet
			* Toimijat
			* Backgroundit
			* Ohjekirja
		- Erilaisten komponenttien valmistus
			* Tarvittavat resurssit
			* Tarvittavat laatikot
			* Eri grafiikka resetointinastalle
		- Erilaisten laitteiden valmistus
			* Tarvittavat resurssit
			* Tarvittavat laitekomponentit
		- Erilaisten toimijoiden valmistus
			* Tarvittavat resurssit
			* Interaktioiden toteuttaminen
		- Kenttäeditori
			* Kenttien tallentaminen tekstitiedostoon
				- Koneiden id:t pitää ehkä laittaa uusiks tallennusvaiheessa 
				koska laskuri ei oo paras tapa nimetä tallennuksia 
				(riippuu järjestyksestä ja menee sekaisin kun poistaa jotain)
					* Ei välttämättä ongelma jos ID:t luodaan vasta tallennettaessa
			* Kenttäeditorimoodiin siirtyminen
				- Resurssiallokaatio?
			* Resurssieditorin käyttöliittymä
				- Laitesuunnitelma-arkkitehtuuri
				- Laitesuunnitelmalaatikot
				- Laitesuunnitelmien liikuttelu
				- Sama toimijoille ja maaleille
				- Seinien / lattian rakentaminen
			* Kentän validointi toteuttamalla
				- Lopputuloksen testaaminen ja tallentaminen
				- Editointiin palaaminen
		- Hauskat extra laitteet ja obstaclet kenttäeditoriin
			* Pongiin tarvittavat jutut
			* Breakouttiin tarvittavat jutut
			* Suondplayerit ja visuaaliset efektit
			* Userinputkomponentit
				- Näppäinkuuntelija
				- Hiirikuuntelija
		- Mainokset uusien laitteiden kanssa
		- Jokaisella kentällä rajattu budjetti ja kaikki 
		komponentit maksaa
			* Valuutan hankkiminen
				- Päiväpalkka ja tehtäväpalkkiot?
			* Myös erinomaiset mikrotransaktiomahdollisuudet
			* Raha voi olla ihan yleinen resurssi
			* Vasta tehtävän palauttaessa maksetaan komponentit
			* Kyseessä yrityksen raha
		- Taustalla kuuluvat äänet
			* "Onpa jännä"
			* "Hmmm..."
			* Tämän käyttäminen palautteena?
				- "Ahaa!"
	
Komponentteja
	* Looginen
		- And
		- Latch
		- Or
		- HC Counter
		- Casual Counter
		- Inverter
		- Exclusive Or (Exor)
		- Delay
		- Not And (Nand)
		- Not Or (Nor)
		- FlipFlop
		- Relay
		- Not Exclusive Or (Exnor)
		- Bistable
		- Binäärimuunnin
		- (Käänteinen flipflop)
	* Looginen input
		- Pulse Generator
		- Power Generator
		
Koneita
	* Värivalitsin
	* Pigviinitunnistaja
	* Magneettitunnistus
	* Solenoidi (hydraulipumppu)
	* Valot
	* Batman sensory unit
	* Maali spray
	* Robottivartiokoirat
		- Pigviinit saa henkisiä traumoja
	* Hissi
		- Kertoo jos hissi on jossain kerroksessa
		- Myös 3 ovea (2 binääristä sisääntuloa)
	* Kahvikone (myös tee)
	* Switch
	* On/Off switch
	* Venttiili
	* Ovi
	* Kallistin (jos fysiikka toimii)
	* On/Off -lukko (?)
	* Liikkeentunnistin
	* Painelaatta
	* Valontunnistus
	* Lämmöntunnistun
	* Vastus
	* Korttilukko
	* Platform joka aukee
	* Ponnahduslauta
	* "Sauronin silmä"
		- Lämmittää rangella
	* Laser
	* Lasertunnistin
	* Nyrkki / littain
	* Apuliukuhihna (tekee samaa kuin toinen)
	* Seinäponnautin
	* Tuuletin (horison ja vert)
	* Maalikuplakone
	* Jäädytin
		- Voi esim. jäädyttää kuplia
	* Keksikone
	* Magneutin
	* Horisontaalinen hissi
Objekteja
	* Pigviini
	* Rosvopigni
	* Roskalaatikko (huono laatikko)
	* Batman
	* Tynnyri
	* Seinämä
	* Jääblokki
		- Silakoita sisällä
	* Kortti
	* Rullaboxi (rullaa muita objekteja)
	* Ponnahduslauta
	* Vinoponnautuslauta
	* Ilmapallopigviini
	* Kupla
	
Ominaisuudet vois laittaa aktiivisina moduuleina
	* Esim. magneettisuusmoduuli liikuttaa tarvittaessa
Diskreetit säätimet joihinkin komponentteihin
Järkevästi otetaan aluksi mukaan lisää komponentteja
		
Huomioita / Ideoita
	* Aikajärjestelmä on vuoropohjainen (aika mitataan vuoroissa)
	* Monivaiheisia tarkistusjärjestelmiä minkä välissä ei saa muttaa koodia?
	* Ylänäkymä näytetään "pohjapiirrustus" -tyylillä, joka muuttuu "realistiseksi" 
	kun testi käynnistetään.
	* Alanäkymä muistuttaa työpöytää
	* Optionssit voi laittaa teemaan sopivasti niin, että resoluutio = "työpöydän koko" 
	ja että ääniasetukset säädetään radiosta
	* Sound designissa pitää olla sellain rakentelijan tuntu
		- Paperin ääntä
		- Kolinaa ja kolketta
		- Puisten laatikoiden avautumista
	* Pelissä merkittävässä roolissa on tulot, budjetointi sekä tutkimus
		- Erillinen Research -näkymä jossa voi unlockata
			* Komponentteja
			* Laitteita
			* Tehtäviä
				- Vain sellaisia, jotka voi toteuttaa nykyisillä komponenteilla & laitteilla
			* Tehokkuutta
				- Komponenttien hinnat alas
				- Koneiden hinnat alas
				- Huom: Ei vaikuta "odotettuihin kustannuksiin" / budjettiin, joiden mukaan tulot lasketaan
		- Budjetti -attribuutti, jota voi käyttää seuraaviin
			* Tutkimukseen
			* Tehtävän tekemiseen
				- Budjetista otetaan pois toteutuneet kustannukset
					* Voitto lasketaan engineer (good) -suoritustason komponenttikustannuksilla
						- = a * kentän mallivastauksen kustannukset (a tulee engineeristä) * tuottokerroin
					* Samoin koneiden kustannukset (vakio) vaikuttaa
					* Tuottoihin ja kustannuksiin otetaan tuotantointensiteetti (= 1 M) mukaan
		- Lisää budjettia saadaan
			* Joka kuukauden alussa (1 kk = oikean elämän päivä tai suoritettu tehtävä?)
				- Projekteista
					* Jos alle 1 M kappaletta myyty
						- Saadan myytyä n kappaletta 15% katteella (suhteessa odotettuihin kustannuksiin)
							* Kaikki rahat suoraan budjettiin (eli 115% kappalekustannuksista * n)
							* n riippuu elinkaaren vaiheesta sekä satunnaismuuttujasta
					* Muuten
						- Saadaan myytyä n kappaletta 15% katteella, mutta kustannukset otetaan pois
							* Eli voittoa tulee 15% * kustannukset * n
								- Missä n lähestyy nollaa ajan kuluessa (* 1/kk tai jotain) ja riippuu myös 
								satunnaismuuttujasta
		- Jos rahaa on < 0, on pakko odottaa eikä voi tehdä mitään. Muuten voi mennä miinukselle jos haluaa