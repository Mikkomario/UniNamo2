Uninamo2 Suunnitelmaa

Työtehtäviä
	* Alpha	----------------------------------------------------------------------
		- Utopia Game Enginen debuggaus										...
			* Originia ei aina ehditä laskea ennen ensimmäistä piirtoa 		Väistetty?
			-> piirtyy aluksi väärään paikkaan
			* Kun siirrytään koodauksesta designiin, voi muutosprosessi 	Väistetty?
			mennä pieleen (puoliksi muuttuu)
			* Törmäyssysteemi ei ota huomioon stepin pituutta				DONE
				- Pitää korjata mahdollisimman pian							DONE
			* Jos törmää hirveän lujaa niin menee toisen objektin sisälle	DONE
			* EpicBOx tippuu lattian läpi!									Väistetty?
				- Tarvittavat numerot muuttuu mystisesti...
			* ComponentBoxin luominen hidastaa ohjelman käynnistymistä 
			omituisen paljon
			* Vaihda MouseListenerHandlerin mousePositionjutut Point2D:stä 	DONE
			Point2D.Doubleen
			* Boxit vaan liukuu jos ne on päällekkäin 
			(laita liikuttaminen toisiin objekteihin)
			* Ohjelma bugaa täydellisesti jos laittaa toisen beltin
		- Alkuvalmistelut													DONE
			* Repositoryn luominen											DONE
			* Ikkunan luominen												DONE
			* Handlersysteemien luominen									DONE
			* Navigaatiosysteemin rekonstruointi							DONE
				- Vanhan navigaatiosysteemin abstrahointi					DONE
				- Yleisen ratkaisun muodostus								DONE
					* Yleinen GamePhase -luokka								DONE
					* Yleinen resourceActivator -luokka						DONE
					* GamePhasejen luominen ja syöttäminen 					DONE
					resourceActovatoriin
			* Graafisten resurssien lataaminen								DONE
		- Komponenttien perustoiminnot										DONE
			* Komponenttiarkkitehtuuri										DONE
			* Yksinkertaisen testikomponentin (virtalähde) luominen			DONE
			* Signaalin lähettäminen ja vastaanottaminen					DONE
				- Signaalinkäsittelijäluokka								DONE
					* Signaalinlähettäjä									DONE
					* Signaalinvastaanottaja								DONE
			* Johtoluokan runko												DONE
			* Komponenttien sijoittaminen ja piirtäminen					DONE
		- Komponenttien kytkeminen toisiinsa								DONE
			* Toisen yksinkertaisen komponenttiluokan valmistaminen			DONE
			* Johtoluokan viimeistely										DONE
				- Johdon piirto												DONE
				- Johdon reagointi signaaleihin								DONE
			* Johtojen luomisen implementointi käyttöliittymässä			DONE
				- Komponenttien hiirikuuntelu								DONE
			* Johtojen poistamisen implementointi käyttöliittymässä			DONE
				- Johtojen hiirikuuntelu									DONE
		- Komponenttinäkymän ja testinäkymän välillä liikkuminen			DONE
			* Eri handlereiden aktivoiminen ja deaktivoiminen				DONE
			* Background toiseen näkymään niin erottaa						DONE
			* Siirtymänappula(t) koodauksen ja suunnitelman välille			DONE
		- Laitteiden perustoiminnot											DONE
			* Laitearkkitehtuuri											DONE
			* Yksinkertaisen testilaitteen (liukuhihna) luominen			DONE
		- Laitteiden kytkeminen komponentteihin								DONE
			* Testilaitteen komponenttien luominen							DONE
			* Liikkumattomuuden lisääminen komponentteihin					DONE
			* Tiedonvälitys komponenttien ja laitteen välillä				DONE
		- Toimijoiden perustoiminnot										DONE
			* Toimija-arkkitehtuuri											DONE
			* Yksinkertaisen testitoimijan (laatikko) luominen				DONE
			* Toimijan sekä laitteiden vuorovaikutus						DONE
		- Testausnappula													DONE
			* Testausnappuloiden lisääminen käyttöliittymään				DONE
			* Testausnappulan reagointi hiireen								DONE
		- Testausmoodi														DONE
			* Testausmoodin aloittaminen									DONE
				- Komponenttien ja muiden aktivoiminen						DONE
			* Testausmoodin lopettaminen									DONE
				- Komponenttien ja muiden resetoiminen						DONE
			* Grafiikoiden vaihtaminen										DONE
			* Komponenttien ja johtojen editoimisen estäminen testin aikana	DONE
		- Ajastin															DONE
			* Ajastimen arkkitehtuuri										DONE
			* Ajastindatan tiedonvälityksen viimeistely						DONE
			* Ajastinta käyttävän testiobjektin tekeminen					DONE
		- Komponenttien liikuttelu työpöydällä								DONE
			* Toiminnan implementoiminen komponenttiluokkaan				DONE
			* Johtojen reagoiminen liikutteluun								DONE
		- Komponenttilaatikot												DONE
			* Komponenttilaatikkoarkkitehtuuri								DONE
				- Ihmeellisten classien tapahtuvien konstruktorikutsujen 	Hylätty
				toteuttaminen
			* Laatikon luominen testikomponentille							DONE
			* Laatikon reagointi hiireen kuvan vaihdolla					DONE
		- Roskis / Komponenttien poistaminen								DONE
			* Roskisluokka ja sen luominen alussa							Hylätty
			* Komponenttien reagointi törmäykseen roskiksen kanssa 			Hylätty
			dropin lopussa
			* Komponenttien tuhoaminen kun ne menevät kentän reunalle		DONE
				- Visuaalinen havainnollistaminen
		- Paranteluja														DONE
			* CableConnectorien kuvan muuttuminen signaalin mukaan			DONE
		- Takaisinkytkentätilanteiden ratkaiseminen							Hylätty
			* Ongelmia signaalintunnistuksen kanssa jos komponentti ohjaa itseään
				- ORin signaalin saa "kiertämään" kytkemällä komponentin itseensä
	* Beta	----------------------------------------------------------------------
		- Voittolaitteet													DONE
			* Voittolaitearkkitehtuuri										DONE
				- Obstaclen tunnistaminen									DONE
				- Kerättyjen obstaclien poistaminen ja laskeminen			DONE
				- Voittohandlerin informoiminen								DONE
				- Jäljellä olevien keräysten piirtäminen					DONE
			* Yksinkertaisen testivoittolaitteen (laatikkovoito) 			DONE
			toteuttaminen
			* VictoryHandler, joka chekkaa, onko kaikki voittolaitteet 		DONE
			voittotilassa ja informoi lopullisen voiton
		- Ohjekirja															...
			* Ohjekirjan "näppäimen" toteuttaminen
			* Ohjekirjan arkkitehtuuri
				- Testikomponentin luominen ja poistaminen
				- Sivun vaihtaminen
				- Sivun tekeminen luokkana?
					* Ehkä kirja voi olla linkitetty lista sivuja?
						- Kirjanmerkit hakuja
					* Eri resurssityypeille ehkä omat pienet luokat
					* Tekstin piirtäminen
						- Checkkaa messagebox jos sieltä sais 
						yleisen version väsättyä
			* Ohjekirjamoodin päälle asettaminen
				- Muiden handlereiden epäaktivoiminen
				- Oma area
			* Alustavan sisällön tuottaminen
				- Testikomponentille tekstiä
				- Testiobjektille tekstiä
				- Testilaitteelle tekstiä
			* Ohjekirjan materiaalin lataaminen tiedostosta					...
			* Näpyteltävä testiversio
				- Haihtuva johtoluokka
				- Erillinen statsi inputnastaan, että klikkauksella 
				vaihtaa tyyppiä
		- Tee designmodesta resoluutiosta riippumaton (tullaan tulevaisuudessa 
		skaalaamaan eri tavalla kuin coding)
		- Säädöt
			* Säätövalikon "näppäimen" toteuttaminen
			* Säätövalikon arkkitehtuuri
			* Säätövalikon moodin päälle asettaminen
			* Säätövalikossa tarvittavat elementit
			* Resoluution säätäminen
			* Musiikin volyymin säätäminen
			* Äänen volyymin säätäminen
			* Efektien volyymin säätäminen
			* Fullscreenin säätö
		- Tehtävänannot
			* Tehtävänantoarkkitehruuri
			* Yksinkertaisen testitehtävänannon valmistaminen
			* Tehtävänannon selostaminen lyhyessä kuvauksessa
			* Tarvittavan moodin piirtäminen ja muiden deaktivoiminen
		- Kahden näkymän piirtäminen testausmoodissa (ja muuten)
			* Kameroiden implementointi
			* Kameran koon ja sijainnin muuttaminen testausvaiheessa
			* Näppäin käyttöliittymään, josta kuvan saa päälle tai pois
		- Kenttien lukeminen tekstitiedostosta
			* Tunnistettujen kenttien polkujen tallentaminen 
			ja lukeminen tekstitiedostosta
			* Laitteiden, toimijoiden sekä tehtävänantojen luominen 
			komentojen pohjalta
		- Sound effectien lisääminen peliin
			* Resurssien lataaminen ohjelman alussa
			* Äänten soittamisen implementointi
		- Samanlaisten input- ja outputkomponenttien (ja laitteiden) 
		erotteleminen toisistaan numeroilla
		- Voittoikkuna
			* Komponenttikäytön analysointi
			* Uusien tehtävien antaminen
		- Parantelua
			* Testausmoodin selkeä näyttäminen koodipuolella
			* Kerättävän stuffin näyttäminen voittokerääjässä
			* Komponenttienumeraation toteuttaminen ja käyttäminen
				- Komponenttilaatikoiden luomisessa ilman erillisiä luokkia
				- Ohjeiden lukemisessa
	* Gold	---------------------------------------------------------------------
		- Tehtävien valitseminen
			* Tehtävien valintaympäristön luominen
			* Tehtävän lopettaminen
			* Tehtävän aloittaminen
		- Main menu
			* Säätöihin, tehtävävalikkoon sekä kenttäeditoriin pääsy
		- Gold Graffat
			* Komponentit
			* Laitteet
			* Toimijat
		- Erilaisten komponenttien valmistus
			* Tarvittavat resurssit
			* Tarvittavat laatikot
			* Eri grafiikka resetointinastalle
		- Erilaisten laitteiden valmistus
			* Tarvittavat resurssit
			* Tarvittavat laitekomponentit
		- Erilaisten toimijoiden valmistus
			* Tarvittavat resurssit
			* Interaktioiden toteuttaminen
		- Käytettävissä olevien komponenttien rajoittaminen
			* Ohjekirjassa näkyy vaan unlockatut
			* Unlockkausten muistaminen
			* Kenttäsidonnaiset komponentit
		- Kenttäeditori
			* Kenttien tallentaminen tekstitiedostoon
			* Kenttäeditorimoodiin siirtyminen
				- Resurssiallokaatio?
			* Resurssieditorin käyttöliittymä
				- Laitesuunnitelma-arkkitehtuuri
				- Laitesuunnitelmalaatikot
				- Laitesuunnitelmien liikuttelu
				- Sama toimijoille ja maaleille
				- Seinien / lattian rakentaminen
		- Hauskat extra laitteet ja obstaclet kenttäeditoriin
			* Pongiin tarvittavat jutut
			* Breakouttiin tarvittavat jutut
			* Suondplayerit ja visuaaliset efektit
			* Userinputkomponentit
				- Näppäinkuuntelija
				- Hiirikuuntelija
		- Mainokset uusien laitteiden kanssa
		- Jokaisella kentällä rajattu budjetti ja kaikki 
		- komponentit maksaa
			* Valuutan hankkiminen
				- Päiväpalkka ja tehtäväpalkkiot?
			* Myös erinomaiset mikrotransaktiomahdollisuudet
			* Raha voi olla ihan yleinen resurssi
			* Vasta tehtävän palauttaessa maksetaan komponentit
			* Kyseessä yrityksen raha
			* Joskus komponentit alennuksessa
		- Taustalla kuuluvat äänet
			* "Onpa jännä"
			* "Hmmm..."
			* Tämän käyttäminen palautteena?
				- "Ahaa!"
	
Komponentteja
	* Looginen
		- And
		- Latch
		- Or
		- HC Counter
		- Casual Counter
		- Inverter
		- Exclusive Or (Exor)
		- Delay
		- Not And (Nand)
		- Not Or (Nor)
		- FlipFlop
		- Relay
		- Not Exclusive Or (Exnor)
		- Bistable
		- Binäärimuunnin
		- (Käänteinen flipflop)
	* Looginen input
		- Pulse Generator
		- Power Generator
		
Koneita
	* Värivalitsin
	* Pigviinitunnistaja
	* Magneettitunnistus
	* Solenoidi (hydraulipumppu)
	* Valot
	* Batman sensory unit
	* Maali spray
	* Robottivartiokoirat
		- Pigviinit saa henkisiä traumoja
	* Hissi
		- Kertoo jos hissi on jossain kerroksessa
		- Myös 3 ovea (2 binääristä sisääntuloa)
	* Kahvikone (myös tee)
	* Switch
	* On/Off switch
	* Venttiili
	* Ovi
	* Kallistin (jos fysiikka toimii)
	* On/Off -lukko (?)
	* Liikkeentunnistin
	* Painelaatta
	* Valontunnistus
	* Lämmöntunnistun
	* Vastus
	* Korttilukko
	* Platform joka aukee
	* Ponnahduslauta
	* "Sauronin silmä"
		- Lämmittää rangella
	* Laser
	* Lasertunnistin
	* Nyrkki / littain
	* Apuliukuhihna (tekee samaa kuin toinen)
	* Seinäponnautin
	* Tuuletin (horison ja vert)
	* Maalikuplakone
	* Jäädytin
		- Voi esim. jäädyttää kuplia
	* Keksikone
	* Magneutin
Objekteja
	* Pigviini
	* Rosvopigni
	* Roskalaatikko (huono laatikko)
	* Batman
	* Tynnyri
	* Seinämä
	* Jääblokki
		- Silakoita sisällä
	* Kortti
	* Rullaboxi (rullaa muita objekteja)
	* Ponnahduslauta
	* Vinoponnautuslauta
	* Ilmapallopigviini
	* Kupla
	
Ominaisuudet vois laittaa aktiivisina moduuleina
	* Esim. magneettisuusmoduuli liikuttaa tarvittaessa
Diskreetit säätimet joihinkin komponentteihin
Järkevästi otetaan aluksi mukaan lisää komponentteja
		
Huomioita / Ideoita
	* Aikajärjestelmä on vuoropohjainen (aika mitataan vuoroissa)
	* Monivaiheisia tarkistusjärjestelmiä minkä välissä ei saa muttaa koodia?
	* Ylänäkymä näytetään "pohjapiirrustus" -tyylillä, joka muuttuu "realistiseksi" 
	kun testi käynnistetään.
	* Alanäkymä muistuttaa työpöytää
	* Optionssit voi laittaa teemaan sopivasti niin, että resoluutio = "työpöydän koko" 
	ja että ääniasetukset säädetään radiosta
	* Sound designissa pitää olla sellain rakentelijan tuntu
		- Paperin ääntä
		- Kolinaa ja kolketta
		- Puisten laatikoiden avautumista